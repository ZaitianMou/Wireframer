{"version":3,"sources":["serviceWorker.js","config/firebaseConfig.js","store/actions/actionCreators.js","store/reducers/authReducer.js","store/reducers/wireframerReducer.js","store/reducers/rootReducer.js","store/database/asynchHandler.js","components/navbar/LoggedInLinks.js","components/navbar/LoggedOutLinks.js","components/navbar/Navbar.js","components/register_screen/RegisterScreen.js","components/login_screen/LoginScreen.js","components/home_screen/HomeScreen.js","components/wireframer_screen/Control.js","components/wireframer_screen/WireframerScreen.js","test/DatabaseTester.js","App.js","store/ReactReduxFirebaseApp.js","index.js"],"names":["Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","registerSuccess","type","registerError","error","logoutSuccess","initState","authReducer","state","action","authError","err","message","todoLists","wireframerReducer","fireStore","getFirestore","dt","Date","time","toUTCString","collection","add","then","x","console","log","id","history","push","rootReducer","combineReducers","auth","todoList","firestore","firestoreReducer","firebaseReducer","registerHandler","newUser","dispatch","getState","createUserWithEmailAndPassword","email","password","resp","doc","user","uid","set","firstName","lastName","initials","whetherAdministrator","wireframers","actionCreators","catch","LoggedInLinks","handleLogout","props","signOut","profile","this","className","to","onClick","React","Component","compose","firebaseConnect","connect","logoutHandler","LoggedOutLinks","Navbar","links","RegisterScreen","handleChange","e","target","setState","value","handleSubmit","preventDefault","register","onSubmit","htmlFor","name","onChange","LoginScreen","authData","credentials","login","signInWithEmailAndPassword","loginHandler","HomeScreen","userID","handleDeleteWireframer","wireframer","index","indexOf","splice","i","length","update","handleAddList","indexOfNewWireframer","users","getFirebase","currentUser","undefined","get","data","wireframres","sort","a","b","lastOpened","map","key","href","header","firestoreConnect","Control","element","control_type","style","display","width","height","fontSize","text_font_size","borderRadius","border_radius","borderWidth","border_thickness","backgroundColor","background_color","borderColor","border_color","color","text_color","text","borderStyle","aspectRatio","background","WireframerScreen","inArrayPosition","displayColorPicker","scale","zoomIn","t","zoomOut","changeProperty","temp","controls","elementSelected","parseInt","getColor","alert","handleClick","handleClose","updateDimension","document","getElementById","board_width","board_height","disabled","selectElement","event","stopPropagation","classList","remove","unselectElement","keyboardInput","ctrlKey","deleteKey","editName","getLeft","handleSelected","saveWork","userRef","createAButton","createALabel","createATextfield","createAContainer","Fragment","params","margin","defaultValue","min","max","textAlign","left","position","transform","size","y","getTop","top","onDragStop","d","onResizeStop","direction","ref","delta","addEventListener","onKeyPressed","bind","e2","JSON","parse","stringify","ownProps","DatabaseTester","handleClear","querySnapshot","forEach","delete","handleReset","wireframeJson","App","isLoaded","exact","path","component","ReactReduxFirebaseApp","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render"],"mappings":"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","file":"static/js/main.0f9e3034.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// THIS IS USED TO INITIALIZE THE firebase OBJECT\n// PUT YOUR FIREBASE PROJECT CONFIG STUFF HERE\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA8LpuAcnxGFYKxFPJDPvUHLHvtpDb6P9Y\",\n    authDomain: \"wireframer-79f37.firebaseapp.com\",\n    databaseURL: \"https://wireframer-79f37.firebaseio.com\",\n    projectId: \"wireframer-79f37\",\n    storageBucket: \"wireframer-79f37.appspot.com\",\n    messagingSenderId: \"909375561441\",\n    appId: \"1:909375561441:web:eb570c72824c2b9416a1a0\",\n    measurementId: \"G-9HKZVXRYJL\"\n  };\nfirebase.initializeApp(firebaseConfig);\n\n// NOW THE firebase OBJECT CAN BE CONNECTED TO THE STORE\nexport default firebase;","// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\n// OBJECDTS THAT WE WILL USE. ACTIONS ARE SIMPLE\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\n// REDUCER, WHICH ADVANCES STATE\n\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\n\n// THESE CREATORS MAKE ACTIONS ASSOCIATED WITH USER ACCOUNTS\n\nexport function registerSuccess() {\n    return { type: 'REGISTER_SUCCESS' }\n};\nexport function registerError(error) { \n    return { type: 'REGISTER_ERROR', error }\n};\nexport function loginSuccess() {\n    return { type: 'LOGIN_SUCCESS' }\n};\nexport function loginError(error) {\n    return { type: 'LOGIN_ERROR', error }\n};\nexport function logoutSuccess() {\n    return { type: 'LOGOUT_SUCCESS' }\n};\n\n// THESE CREATORS MAKE ACTIONS FOR ASYNCHRONOUS TODO LIST UPDATES\n","import * as actionCreators from '../actions/actionCreators'\n\n// REDUCERS ARE CALLED WHEN AN ACTION IS DISPATCHED,\n// THEIR JOB IS TO ADVANCE THE STATE. THEY WILL UPDATE\n// AND RETURN THE NEW, UPDATED STATE\n\nconst initState = {};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case actionCreators.LOGIN_ERROR:\n      return {\n        ...state,\n        authError: 'Login fail',\n      };\n    case actionCreators.LOGIN_SUCCESS:\n      return {\n        ...state,\n        authError: null,\n      };\n    case actionCreators.LOGOUT_SUCCESS:\n      return state;\n    case actionCreators.REGISTER_SUCCESS:\n      return {\n        ...state,\n        authError: null,\n      };\n    case actionCreators.REGISTER_ERROR:\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","import { getFirestore } from 'redux-firestore';\nimport { get } from 'http';\nimport { firestore } from 'firebase';\n\nconst initState = {\n    todoLists: []\n};\n\n\nconst wireframerReducer = (state = initState, action) => {\n\n    switch (action.type) {\n        /* IF YOU HAVE ANY TODO LIST EDITING REDUCERS ADD THEM HERE */\n        case \"ADD_NEW_LIST\":\n            const fireStore = getFirestore();\n            const dt = new Date();\n            const time = dt.toUTCString();\n            fireStore.collection('todoLists').add({\n                \"key\": 0,\n                \"name\": \"UNKNOWN\",\n                \"owner\": \"\",\n                \"items\": [],\n                \"lastOpened\": { time }\n            }).then(x => {\n                console.log(\"!\" + x.id);\n                action.history.push('/todoList/' + x.id);\n            })\n\n            return state;\n            break;\n        case \"EDIT_ITEM\":\n            break;\n        default:\n            return state;\n    }\n};\nexport default wireframerReducer;","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'; // syncing firestore\nimport { firebaseReducer } from 'react-redux-firebase';\nimport authReducer from './authReducer';\nimport wireframerReducer from './wireframerReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  todoList: wireframerReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;","import * as actionCreators from '../actions/actionCreators.js'\n\nexport const loginHandler = ({ credentials, firebase }) => (dispatch, getState) => {\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password,\n    ).then(() => {\n      console.log(\"LOGIN_SUCCESS\");\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n  };\n\nexport const logoutHandler = (firebase) => (dispatch, getState) => {\n    firebase.auth().signOut().then(() => {\n        dispatch(actionCreators.logoutSuccess);\n    });\n};\n\nexport const registerHandler = (newUser, firebase) => (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(\n        newUser.email,\n        newUser.password,\n    ).then(resp => firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: `${newUser.firstName[0]}${newUser.lastName[0]}`,\n        whetherAdministrator: false,\n        email:newUser.email,\n        wireframers:newUser.wireframers\n    })).then(() => {\n        dispatch(actionCreators.registerSuccess);\n    }).catch((err) => {\n        dispatch(actionCreators.registerError);\n        console.log(err);\n    });\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { logoutHandler } from '../../store/database/asynchHandler'\nimport {getFirebase } from 'react-redux-firebase';\n\nclass LoggedInLinks extends React.Component {\n\n  // As in SignIn.jsx we need to use a function that gets as an argument firebase object\n  handleLogout = () => {\n    const { firebase } = this.props;\n    this.props.signOut(firebase);\n  }\n\n  render() {\n    const { profile } = this.props;\n    \n    return (\n      <ul className=\"right\">\n        <li><NavLink to=\"/\" onClick={this.handleLogout}>Log Out</NavLink></li> {/* I left NavLink instead of anchor tag because I'm using airbnb eslint rules */}\n        <li><NavLink to=\"/\" className=\"btn blue lighten-2\">{profile.email}</NavLink></li>\n        {/* <p>Current user: profile.email</p> */}\n      </ul>\n    );\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: firebase => dispatch(logoutHandler(firebase)),\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(null, mapDispatchToProps),\n)(LoggedInLinks);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass LoggedOutLinks extends React.Component {\n  render() {\n    return (\n      <ul className = \"right\" >\n        <li><NavLink to=\"/register\">Register</NavLink></li>\n       \n      </ul>\n    );\n  }\n}\n\nexport default LoggedOutLinks;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport LoggedInLinks from './LoggedInLinks';\nimport LoggedOutLinks from './LoggedOutLinks';\n\nclass Navbar extends React.Component {\n\n  render() {\n    const { auth, profile } = this.props;\n    const links = auth.uid ? <LoggedInLinks profile={profile} /> : <LoggedOutLinks />;\n\n    return (\n      <nav className=\"nav-wrapper grey darken-3\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"brand-logo left\">@wireframers</Link>\n          {links}\n        </div>\n      </nav>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  profile: state.firebase.profile,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(Navbar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect, getFirebase } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { registerHandler } from '../../store/database/asynchHandler'\nimport firebase from '../../config/firebaseConfig';\n\nclass RegisterScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n\n    e.preventDefault();\n\n    const { props, state } = this;\n    const { firebase } = props;\n    const newUser = { \n      email: this.state.email,\n      password: this.state.password,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      wireframers:[{\n        \"name\": \"Your first wireframer\",\n        \"board_height\": 650,\n        \"board_width\": 650,\n        \"index\": 0,\n        \"controls\": []\n      },\n      {\n        \"name\": \"Your second wireframer\",\n        \"board_height\": 650,\n        \"board_width\": 650,\n        \"index\": 0,\n        \"controls\": []\n      }]\n\n\n     };\n\n    props.register(newUser, firebase);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Register</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  authError: state.auth.authError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  register: (newUser, firebase) => dispatch(registerHandler(newUser, firebase)),\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(RegisterScreen);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { loginHandler } from '../../store/database/asynchHandler'\n\nclass LoginScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    // As we use react-redux-firebas-v3 we need to pass firebase object to\n    // authActions to be authorized by using firebse.auth method\n    const { props, state } = this;\n    const { firebase } = props;\n    const credentials = { ...state };\n    const authData = {\n      firebase,\n      credentials,\n    };\n\n    props.login(authData);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <form onSubmit={this.handleSubmit} className=\"col s4 white\">\n            <h5 className=\"grey-text text-darken-3\">Login</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input className=\"active\" type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input className=\"active\" type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\n              {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\n            </div>\n          </form>\n\n          <div className=\"col s8 banner\">\n            Welcome to <br />\n            Wireframers\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authError: state.auth.authError,\n  auth: state.firebase.auth,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: authData => dispatch(loginHandler(authData)),\n});\n\n// We need firebaseConnect function to provide to this component\n// firebase object with auth method.\n// You can find more information on the link below\n// http://docs.react-redux-firebase.com/history/v3.0.0/docs/auth.html\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(LoginScreen);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { firestoreConnect, actionTypes } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport { getFirebase } from 'react-redux-firebase';\nimport { getFirestore } from 'redux-firestore';\nimport { Button, Modal } from 'react-materialize';\nimport firebase from \"../../config/firebaseConfig\";\n\nclass HomeScreen extends Component {\n\n    state = {\n        user: null,\n        wireframers: [],\n        userID: \"0\",\n    }\n    render() {\n        if (!this.props.auth.uid) {\n            return <Redirect to=\"/login\" />;\n        }\n        const users = this.props.users.users;\n        const userID = getFirebase().auth().currentUser.uid;\n        this.state.userID = userID;\n       \n        if(this.state.user==null){\n            console.log(\"start\")\n            if (this.props.users.users!=undefined) {\n                // this.state.user=users[userID];\n                console.log(\"!!!\");\n                console.log(this.props.auth.uid);\n                //console.log(this.props.users.users[userID][\"wireframers\"])\n                //this.state.users=this.props.users.users[this.props.auth.uid]\n                \n                //let list=users[userID][\"wireframers\"];\n                //if(this.props.users.users[this.props.auth.uid]!=undefined)\n                var user = firebase.firestore().collection(\"users\").doc(userID);\n              \n                user.get().then(doc=>{\n                    const wireframers = doc.data().wireframers;\n                    console.log(\".\")\n                    console.log(wireframers)\n                    this.setState({\n                        user:doc.data(),\n                        wireframres:wireframers\n                    })\n                    this.state.user=doc.data();\n                    wireframers.sort((a,b)=>{\n\n                        if (a.lastOpened == null) return 1;\n                        if (b.lastOpened == null) return -1;\n                        if (a.lastOpened < b.lastOpened) {\n                            return 1\n                        }\n                        else return -1\n                    })\n                    this.state.wireframers=wireframers;\n                }\n\n                )\n                \n                // if (list!=undefined && list.length>=2) {\n                //     list = list.sort(compare);\n                //     this.state.wireframers = list;\n                // }\n            }\n        }\n        function compare(a, b) {\n\n            if (a.lastOpened == null) return 1;\n            if (b.lastOpened == null) return -1;\n            if (a.lastOpened < b.lastOpened) {\n                return 1\n            }\n            else return -1\n        }\n\n        return (\n            <div className=\"dashboard container\">\n                <p className=\"large\" id=\"text_recent_work\">\n                    Recent work:\n                </p>\n                <div className=\"row\">\n                    <div className=\"col s6 m6\">\n                        {this.state.wireframers.map(wireframer => (\n\n                            <div>\n                                <Link to={'/wireframer/' + wireframer.index} key={wireframer.name}>\n                                    <div className=\"black-text home_wireframer_link\">\n                                        {wireframer.name}\n                                    </div>\n                                </Link>\n\n                                <Button href={\"#modal\" + wireframer.index} className=\"modal-trigger red modal_delete_list waves-effect waves-light home_delete_button\">\n                                    <i className=\"material-icons\">clear</i>\n                                </Button>\n                                <Modal id={\"modal\" + wireframer.index} header={\"Delete Wireframer: \" + wireframer.name + \"?\"}>\n                                    Are you sure you would like to delete wireframer: {wireframer.index}\n                                    <br></br>\n                                    <b>Note: it's not undoable.</b>\n                                    <Link to=\"/\" >\n                                        <Button className=\"submit_button_in_modal red\" onClick={() => { this.handleDeleteWireframer(wireframer) }}>\n                                            <i>Yes</i>\n                                        </Button>\n                                    </Link>\n                                </Modal>\n                            </div>\n                        ))}\n                    </div>\n\n                    <div className=\"col s6\">\n                        <div className=\"banner\">\n                            Wireframers<br />\n                        </div>\n\n                        <div className=\"home_new_list_container\">\n                            {/*  path below should be similiar with that/todoList\"+todoLists[0].id */}\n                            <Link to=\"/\" className=\"home_new_list_button\" />\n                            <button className=\"home_new_list_button\" onClick={this.handleAddList}  >\n                                Create a New Wireframer\n                                    </button>\n                            <Link />\n                        </div>\n\n                        {this.state.user != null && this.state.user.whetherAdministrator ?\n                            <div>\n                                <Link to=\"databaseTester\">\n                                    <button>\n                                        databaseTester\n                                    </button>\n                                </Link>\n                            </div>\n                            : <div></div>\n                        }\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    handleDeleteWireframer = (wireframer) => {\n        console.log(wireframer.name)\n        const fireStore = getFirestore();\n        let x = this.state.wireframers;\n        let index = x.indexOf(wireframer);\n        x.splice(index, 1);\n        for (let i = index; i < x.length; i++) {\n            x[i].index = i\n        }\n        fireStore.collection(\"users\").doc(this.state.userID).update({\n            \"wireframers\": [...x]\n        })\n    }\n    handleAddList = () => {\n        // this.props.addList(this.props.history);\n        //alert(\"!\");\n        const fireStore = getFirestore();\n        if (this.state.wireframers.length != 0) {\n           \n            fireStore.collection(\"users\").doc(this.state.userID).update({\n                \"wireframers\": [...this.state.wireframers, {\n                    \"name\": \"Unknown\",\n                    \"board_height\": 400,\n                    \"board_width\": 400,\n                    \"index\": this.state.wireframers.length,\n                    //\"index\":this.state.wireframers[this.state.wireframers.length-1].index+1,\n                    \"controls\": []\n                }]\n            }).then(x => {\n                //console.log(this.state.wireframers[this.state.wireframers.length-1].index);\n                if (this.state.wireframers.length == 0)\n                    var indexOfNewWireframer = 0;\n                else\n                    var indexOfNewWireframer = this.state.wireframers[this.state.wireframers.length - 1].index;\n                this.props.history.push('/wireframer/' + indexOfNewWireframer)\n            })\n        }\n        else {\n            console.log(\"nothing\")\n            fireStore.collection(\"users\").doc(this.state.userID).update({\n                \"wireframers\": {\n                    \"name\": \"Unknown\",\n                    \"board_height\": 400,\n                    \"board_width\": 400,\n                    \"index\": this.state.wireframers.length,\n                    //\"index\":this.state.wireframers[this.state.wireframers.length-1].index+1,\n                    \"controls\": []\n                }\n            }).then(x => {\n                //console.log(this.state.wireframers[this.state.wireframers.length-1].index);\n                if (this.state.wireframers.length == 0)\n                    var indexOfNewWireframer = 0;\n                else\n                    var indexOfNewWireframer = this.state.wireframers[this.state.wireframers.length - 1].index;\n                this.props.history.push('/wireframer/' + indexOfNewWireframer)\n            })\n        }\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        users: state.firestore.data\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    firestoreConnect([\n        { collection: 'users' }\n    ]), // to sort: add below \" orderBy: ['lastOpened','desc'] \"into firestoreConnect\n)(HomeScreen);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { getFirebase, getFirestore } from 'react-redux-firebase';\n// import { Platform, StyleSheet, Text, View } from 'react-native';\nimport Rectangle from 'react-rectangle';\n\nimport ResizableRect from 'react-resizable-rotatable-draggable';\nclass Control extends Component {\n    state = {\n        element: null,\n    }\n    \n    render() {\n        const element = this.props.element;\n        if (element.control_type == \"button\") {\n            return (\n                <button style={{ display: \"inline-block\",width: \"100%\", height: \"100%\", \n                fontSize: `${element.text_font_size}px`, borderRadius: `${element.border_radius}px`, \n                borderWidth: `${element.border_thickness}px`, \n                backgroundColor:element.background_color,\n                borderColor:element.border_color, color:element.text_color}}> {element.text}</button>\n\n            )\n        }\n        else if (element.control_type == \"label\") {\n            return (\n                <div style={{ width: \"100%\", height: \"100%\", fontSize: `${element.text_font_size}px`, \n                borderRadius: `${element.border_radius}px`, borderWidth: `${element.border_thickness}px`,\n                borderStyle: \"ridge\" ,\n                backgroundColor:element.background_color,\n                borderColor:element.border_color, color:element.text_color}}> \n                {element.text}\n                </div>\n            )\n        }\n        else if (element.control_type == \"container\") {\n            return (\n                <Rectangle aspectRatio={[5, 3]}>\n                    <div style={{ background: '#607d8b', width: '100%', height: '100%', \n                    borderRadius: `${element.border_radius}px`, borderWidth: `${element.border_thickness}px`, \n                    borderStyle:\"ridge\",\n                    backgroundColor:element.background_color,\n                borderColor:element.border_color, color:element.text_color}}/>\n                </Rectangle>\n            )\n        }\n        else if (element.control_type == \"textfield\") {\n            return (\n                <input value={element.text} style={{ fontSize: `${element.text_font_size}px`,\n                 borderRadius: `${element.border_radius}px`, borderWidth: `${element.border_thickness}px`,\n                 borderStyle: \"ridge\",\n                 backgroundColor:element.background_color,\n                borderColor:element.border_color, color:element.text_color }}>\n                </input>\n            )\n        }\n        else {\n            return (\n                <p>\n                    nothing\n                </p>\n            )\n        }\n    }\n}\n\n\nexport default Control;\n// export default compose(\n//     connect(mapStateToProps, mapDispatchToProps),\n//     firestoreConnect([\n//         { collection: 'users' },\n//     ]),\n// )(Control);","import React, { Component } from 'react';\nimport { Redirect, Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { getFirebase, getFirestore } from 'react-redux-firebase';\nimport firebase from \"../../config/firebaseConfig\";\nimport { Button, Modal } from 'react-materialize';\nimport Control from './Control';\nimport { Rnd } from 'react-rnd';\nclass WireframerScreen extends Component {\n    state = {\n        wireframer: null,\n        wireframers: null,\n\n        index: null,\n        userID: '',\n        inArrayPosition: -1, //position of currne wireframer in wireframers\n        displayColorPicker: false,\n        scale: 1\n    }\n\n    render() {\n        const auth = this.props.auth;\n        if (!auth.uid) {\n            return <Redirect to=\"/\" />;\n        }\n        if (this.props.users == undefined)\n            return <React.Fragment />\n\n       \n        this.state.index = this.props.match.params.index;\n        this.state.userID = getFirebase().auth().currentUser.uid;\n        const dt = new Date();\n        const x = dt.toUTCString();\n        \n        if (this.state.wireframers == null) {\n\n            if (this.props.users.users != undefined) {\n               \n                const user = firebase.firestore().collection(\"users\").doc(this.state.userID);\n                user.get().then(doc => {\n                    const wireframers = doc.data().wireframers;\n                    console.log(\">>>\")\n                    console.log(wireframers)\n                    const i = this.props.match.params.index;\n                    if (wireframers[i].index == this.state.index) {\n                        this.state.wireframer = wireframers[i]\n                        this.state.wireframer.lastOpened = dt;\n                        this.state.wireframers = wireframers;\n                        this.state.inArrayPosition = i;\n\n                        this.state.wireframers[i].lastOpened = x;\n                        user.update({\n                            wireframers: this.state.wireframers\n                        })\n\n                    }\n                })\n            }\n        }\n\n        return (\n           \n            <div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\" className=\"active\">Name</label>\n                    <input className=\"active\" value={this.state.wireframer ? this.state.wireframer.name : null} type=\"text\" name=\"name\"\n                        id=\"name_input_field\" onChange={(event) => this.editName(event.target.value)} />\n                </div>\n    \n\n                <div className=\"row outContainer\">\n                    <div className=\"leftColumn\">\n                        <div className=\"saveSection\">\n                       \n                            <p className=\"save_button\" onClick={() => this.saveWork(this.state.wireframer.controls)} >Save</p>\n                            <p className=\"close_button modal-trigger\" href={\"#modalWhenClose\"} >Close</p>\n                        </div>\n                    \n                        <div className=\"zoomAndDimensionSection\">\n                            <i className=\"material-icons\" id=\"zoom_in_button\" onClick={() => this.zoomIn()}>zoom_in</i>\n                            <i className=\"material-icons\" id=\"zoom_out_button\" onClick={() => this.zoomOut()}>zoom_out</i>\n                            <p style={{margin:'0'}}>Current: {this.state.scale}X</p>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"email\" className=\"active\">board width:</label>\n                                <input className=\"active dimension_input_field\" defaultValue={this.state.wireframer ? this.state.wireframer.board_width : null} type=\"number\" name=\"name\" min=\"1\" max=\"5000\"\n                                    id=\"dimension_width_input\" onChange={() => document.getElementById(\"button_update_dimension\").disabled = false} />\n                            </div>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"email\" className=\"active\">board height:</label>\n                                <input className=\"active dimension_input_field\" defaultValue={this.state.wireframer ? this.state.wireframer.board_height : null} type=\"number\" name=\"name\" min=\"1\" max=\"5000\"\n                                    id=\"dimension_height_input\" onChange={() => document.getElementById(\"button_update_dimension\").disabled = false} />\n                            </div>\n                            <p id=\"button_update_dimension\" onClick={() => this.updateDimension()}>Update</p>\n                           \n                            <Modal id=\"modalWhenClose\" header={\"Want to save your work before leave?\"}>\n                                <Link to=\"/\" ><Button className=\"submit_button_in_modal\" onClick={() => { this.saveWork() }}>\n                                    <i>Save</i>\n                                </Button></Link>\n                                <Link to=\"/\"><Button className=\"red\">\n                                    Don't save.\n                                </Button></Link>\n                            </Modal>\n                        </div>\n                        <div className=\"divider\"></div>\n                        <div className=\"add_element_section\">\n                            <p>\n                                Click to add element\n                            </p>\n                            <div onClick={() => this.createAContainer()} style={{ textAlign:'center', borderStyle: \"solid\", borderWidth: '1px', \n                            width: \"80%\", borderRadius: '1px',left: '10%', position: 'relative' }} className=\"add_element_icon\">\n                                <p>Container</p>\n                            </div>\n                            <div onClick={() => this.createALabel()} className=\"add_element_icon\" style={{textAlign:'center'}}>\n                                <p>Label</p>\n                            </div>\n\n                            <div  style={{left: '20%', position: 'relative' }}>\n                                <button onClick={() => this.createAButton()} className=\"add_element_icon\">Button</button>\n                             \n                            </div>\n                            <div className=\"add_element_icon\" >\n                                <input value=\"Textfield\" onClick={() => this.createATextfield()} ></input>\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                    <div className=\"\" id=\"white_board_wrapper\" >\n                        <div  id=\"white_board\"\n                            onClick={() => this.unselectElement()} style={this.state.wireframer ? { height: this.state.wireframer.board_height, width: this.state.wireframer.board_width, transform: 'scale(' + this.state.scale + ')' } : {}}>\n\n                            {this.state.wireframer && this.state.wireframer.controls.map((element, index) => (\n\n                                <div onClick={(e) => this.selectElement(index, e)} >\n                                    <Rnd id={\"control\" + index}\n                                        size={{ width: parseInt(element.width), height: parseInt(element.height) }}\n                                        position={{\n                                            x: element.left < 0 ? 0 : (element.left > this.state.wireframer.board_width - parseInt(element.width, 10) ? this.state.wireframer.board_width - parseInt(element.width, 10) : element.left),\n                                            y: this.getTop(element.top, parseInt(element.height))\n                                        }}\n                                        onDragStop={(e, d) => {\n                                            let temp = this.state.wireframer;\n                                            temp.controls[index].top = d.y;\n                                            temp.controls[index].left = d.x;\n                                            this.setState({\n                                                wireframer: temp\n                                            })\n                                        }}\n                                        onResizeStop={(e, direction, ref, delta, position) => {\n                                            let temp = this.state.wireframer;\n                                            temp.controls[index].width = ref.style.width;\n                                            temp.controls[index].height = ref.style.height;\n                                            this.setState({\n                                                wireframer: temp\n                                            })\n\n                                        }}\n                                    >\n                                        <Control element={element} />\n\n                                    </Rnd>\n                                </div>\n                            ))}\n                        </div>\n\n                    </div>\n\n\n                    <div className=\"\" id=\"property_section\">\n                        <p>Properties</p>\n\n                        <div className=\"input-field\">\n                            <label htmlFor=\"email\" className=\"active\">Text</label>\n                            <input className=\"active\" value={this.state.wireframer && this.state.elementSelected!=null ? this.state.wireframer.controls[this.state.elementSelected].text : null}\n                                type=\"text\" name=\"name\" id=\"text_input\" onChange={(event) => this.changeProperty(\"text\", event.target.value)} />\n                        </div>\n\n                        <div className=\"input-field\">\n                            <label className=\"active\">Font size</label>\n                            <input className=\"active\" value={this.state.wireframer && this.state.elementSelected!=null ? this.state.wireframer.controls[this.state.elementSelected].text_font_size : null}\n                                type=\"range\" min='5' max='40' id=\"font_size_input\" onChange={(event) => this.changeProperty(\"text_font_size\", event.target.value)} />\n                        </div>\n                        <p style={{left: '5%', position: 'relative', margin:'3px'  }}>Background color</p>\n                        <input value={this.state.wireframer && this.state.elementSelected!=null? this.state.wireframer.controls[this.state.elementSelected].background_color : null}\n                        type=\"color\" name=\"background_color\" onChange={(event)=>this.changeProperty(\"background_color\",event.target.value)}\n                        style={{left: '10%', position: 'relative'}}></input>\n                        \n                        <p style={{left: '5%', position: 'relative', margin:'3px'  }}>Border color </p>\n                        <input value={this.state.wireframer && this.state.elementSelected!=null ? this.state.wireframer.controls[this.state.elementSelected].border_color : null}\n                        type=\"color\" name=\"border_color\" onChange={(event)=>this.changeProperty(\"border_color\",event.target.value)}\n                        style={{left: '10%', position: 'relative' }}></input>\n\n                        <p style={{left: '5%', position: 'relative', margin:'3px'  }}>Text color</p>\n                        <input value={this.state.wireframer && this.state.elementSelected!=null ? this.state.wireframer.controls[this.state.elementSelected].text_color : null}\n                        type=\"color\" name=\"text_color\"  onChange={(event)=>this.changeProperty(\"text_color\",event.target.value)}\n                        style={{left: '10%', position: 'relative'}}></input>\n\n\n                        <div className=\"input-field\">\n                            <label htmlFor=\"email\" className=\"active\">Board thickness</label>\n                            <input className=\"active\" value={this.state.wireframer && this.state.elementSelected!=null ? this.state.wireframer.controls[this.state.elementSelected].border_thickness : null}\n                                type=\"range\" name=\"points\" min=\"1\" max=\"20\" id=\"board_thickness_input\" onChange={(event) => this.changeProperty(\"border_thickness\", event.target.value)} />\n                        </div>\n\n                        <div className=\"input-field\">\n                            <label htmlFor=\"email\" className=\"active\">Board radius</label>\n                            <input className=\"active\" value={this.state.wireframer && this.state.elementSelected!=null ? this.state.wireframer.controls[this.state.elementSelected].border_radius : null}\n                                type=\"range\" name=\"points\" min=\"1\" max=\"100\" id=\"board_radius_input\" onChange={(event) => this.changeProperty(\"border_radius\", event.target.value)} />\n                        </div>\n\n\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    zoomIn = () => {\n        let t = this.state.scale;\n        this.setState({\n            scale: t * 2\n        })\n        console.log(\"Now the scale is:\" + this.state.scale)\n    }\n    zoomOut = () => {\n        let t = this.state.scale;\n        this.setState({\n            scale: t / 2\n        })\n        console.log(\"Now the scale is:\" + this.state.scale)\n    }\n    getTop(top, height) {\n        height = parseInt(height, 10);\n        if (top < 0)\n            return 0;\n        else if (top > this.state.wireframer.board_height - height)\n            return this.state.wireframer.board_height - height;\n        else return top;\n    }\n    getLeft(left, width) {\n        width = parseInt(width, 10);\n        if (left < 0)\n            return 0;\n        else if (left > this.state.wireframer.board_width - width)\n            return this.state.wireframer.board_width - width;\n        else return left;\n    }\n\n    changeProperty = (type, value) => {\n        console.log(value)\n        let temp = this.state.wireframer;\n        switch (type) {\n            case \"text\": temp.controls[this.state.elementSelected].text = value; break;\n            case \"text_font_size\": temp.controls[this.state.elementSelected].text_font_size = parseInt(value); break;\n            case \"border_thickness\": temp.controls[this.state.elementSelected].border_thickness = parseInt(value); break;\n            case \"border_radius\": temp.controls[this.state.elementSelected].border_radius = parseInt(value); break;\n            case \"background_color\": temp.controls[this.state.elementSelected].background_color=value; break;\n            case \"border_color\":temp.controls[this.state.elementSelected].border_color=value; break;\n            case \"text_color\": temp.controls[this.state.elementSelected].text_color=value; break;\n        }\n        this.setState({\n            wireframer: temp\n        })\n\n    }\n    getColor = () => {\n        alert(\"ready\")\n        if (this.state.wireframer && this.state.elementSelected) {\n            return this.state.wireframer.controls[this.state.elementSelected].color;\n        }\n        else {\n            alert(\"NOT ok\")\n            return null\n        }\n    }\n    handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker })\n    };\n\n    handleClose = () => {\n        this.setState({ displayColorPicker: false })\n    };\n\n    handleChange = (color) => {\n        let temp = this.state.wireframer;\n        temp.controls[this.state.elementSelected].color = color\n        this.setState({ wireframers: temp })\n    };\n\n    updateDimension = (value, type) => {\n        let width = parseInt(document.getElementById(\"dimension_width_input\").value);\n        let height = parseInt(document.getElementById(\"dimension_height_input\").value);\n        let t = this.state.wireframers;\n\n        if (!(width >= 1 && width <= 5000)) {\n            alert(\"Input Invalid.\")\n            return null\n        }\n        if (!(height >= 1 && height <= 5000)) {\n            alert(\"Input Invalid.\")\n            return null\n        }\n        t[this.state.index].board_width = width\n        t[this.state.index].board_height = height\n        this.setState({\n            wireframers: t\n        })\n\n        document.getElementById(\"button_update_dimension\").disabled = true\n\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.onKeyPressed.bind(this));\n    }\n    onKeyPressed(e) {\n        if (this.state.elementSelected != null) {\n            if (e.key == 'd' && e.ctrlKey) {\n                console.log(\"Ctrl+D detected. Duplicate element: \" + this.state.elementSelected);\n                let temp = this.state.wireframer;\n                let e = temp.controls[this.state.elementSelected]\n                console.log(e.index)\n                if ( document.getElementById(\"control\" + e.index)!=null)\n                    document.getElementById(\"control\" + e.index).classList.remove(\"selected_control\");\n                let e2 = JSON.parse(JSON.stringify(e));\n                e2.index = this.state.wireframer.controls.length;\n                e2.top = e.top - 100;\n                e2.left = e.left - 100;\n                temp.controls.push(e2);\n\n               \n                this.setState({\n                    wireframer: temp,\n                    elementSelected:e2.index\n                })\n               \n                if ( document.getElementById(\"control\" + e.index)!=null)\n                    document.getElementById(\"control\" + e2.index).className = \"selected_control\";\n\n               \n            }\n            if (e.key === \"Backspace\") {\n                console.log(\"DELETE detected. Delete element: \" + this.state.elementSelected)\n                let temp = this.state.wireframer;\n\n                temp.controls.splice(this.state.elementSelected, 1);\n                for (let i = this.state.elementSelected; i < temp.controls.length; i++) {\n                    temp.controls[i].index = i\n                  \n                }\n                if ( document.getElementById(\"control\" + this.state.elementSelected)!=null)\n                    document.getElementById(\"control\" + this.state.elementSelected).classList.remove(\"selected_control\");\n                this.setState({\n                    wireframer: temp,\n                    elementSelected:null\n                })\n            }\n        }\n        else {\n            console.log(\"No element selected.\")\n        }\n    }\n    selectElement = (index, event) => {\n        event.stopPropagation();\n        if (this.state.elementSelected != null) {\n            document.getElementById(\"control\" + this.state.elementSelected).classList.remove(\"selected_control\");\n        }\n        this.setState({\n            elementSelected: index\n        })\n        document.getElementById(\"control\" + index).className = \"selected_control\";\n    }\n    unselectElement = () => {\n        if (this.state.elementSelected != null) {\n            document.getElementById(\"control\" + this.state.elementSelected).classList.remove(\"selected_control\");\n        }\n        this.setState({\n            elementSelected: null\n        })\n    }\n    keyboardInput = (e) => {\n        alert(this.state.elementSelected);\n        if (e.key === 'd' && e.ctrlKey) {\n            alert(\"\")\n        }\n        else if (e.deleteKey) {\n            alert(\"\")\n        }\n    }\n    editName = (value) => {\n        let t = this.state.wireframers;\n        t[this.state.index].name = value;\n        this.setState({\n            wireframers: t\n        })\n    }\n\n\n    getLeft = () => {\n    }\n    handleSelected = () => {\n    }\n    saveWork = (controls) => {\n        let userRef = firebase.firestore().collection(\"users\").doc(this.state.userID)\n        let x = this.state.wireframers;\n        x[this.state.inArrayPosition] = this.state.wireframer;\n        userRef.update({\n            \"wireframers\": x\n        })\n\n        alert(\"Saved\");\n    }\n\n    createAButton = () => {\n        let temp = this.state.wireframer;\n        temp.controls.push({\n            \"control_type\": \"button\",\n            \"index\": temp.controls.length,\n            \"top\": 0,\n            \"left\": 0,\n            \"width\": 130,\n            \"height\": 40,\n            \"text\": \"This is a button.\",\n            \"text_font_size\": 12,\n            \"background_color\":\"#bfc9ca\",\n\t\t\t\"border_color\":\"#7fb3d5\",\n\t\t\t\"text_color\":\"#17202a\",\n            \"border_thickness\": 2,\n\t\t\t\"border_radius\":1\n        })\n        this.setState({\n            wireframer: temp\n        })\n    }\n    createALabel = () => {\n        let temp = this.state.wireframer;\n        temp.controls.push({\n            \"control_type\": \"label\",\n            \"index\": temp.controls.length,\n            \"top\": 0,\n            \"left\": 0,\n            \"width\": 85,\n            \"height\": 20,\n            \"text\": \"This is a Label.\",\n            \"text_font_size\": 12,\n            \"background_color\":\"#bfc9ca\",\n\t\t\t\"border_color\":\"#7fb3d5\",\n\t\t\t\"text_color\":\"#17202a\",\n            \"border_thickness\": 0,\n\t\t\t\"border_radius\":0\n        })\n        this.setState({\n            wireframer: temp\n        })\n    }\n    createATextfield = () => {\n        let temp = this.state.wireframer;\n        temp.controls.push({\n            \"control_type\": \"textfield\",\n            \"index\": temp.controls.length,\n            \"top\": 0,\n            \"left\": 0,\n            \"width\": 110,\n            \"height\": 20,\n            \"text\": \"This is a textfield.\",\n            \"text_font_size\": 12,\n            \"background_color\":\"#bfc9ca\",\n\t\t\t\"border_color\":\"#7fb3d5\",\n\t\t\t\"text_color\":\"#17202a\",\n            \"border_thickness\": 0,\n            \"border_radius\":0\n        })\n        this.setState({\n            wireframer: temp\n        })\n    }\n    createAContainer = () => {\n        let temp = this.state.wireframer;\n        temp.controls.push({\n            \"control_type\": \"container\",\n            \"index\": temp.controls.length,\n            \"top\": 0,\n            \"left\": 0,\n            \"width\": 50,\n            \"height\": 20,\n            \"text\": \"Container has no text.\",\n            \"text_font_size\": 0,\n            \"background_color\":\"#bfc9ca\",\n\t\t\t\"border_color\":\"#7fb3d5\",\n\t\t\t\"text_color\":\"#17202a\",\n            \"border_thickness\": 2,\n\t\t\t\"border_radius\":10\n        })\n        this.setState({\n            wireframer: temp\n        })\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        //     deleteList: (id) => { dispatch(deleteList(id)) },\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n\n    const { id } = ownProps.match.params;\n    const { todoLists } = state.firestore.data;\n    const todoList = todoLists ? todoLists[id] : null;\n    if (todoList)\n        todoList.id = id;\n\n\n    return {\n        auth: state.firebase.auth,\n        users: state.firestore.data,\n        profile: state.firebase.profile,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    firestoreConnect([\n        { collection: 'users' },\n    ]),\n)(WireframerScreen);","import React from 'react'\nimport { connect } from 'react-redux';\nimport wireframeJson from './TestWireframeData.json'\nimport { getFirestore } from 'redux-firestore';\nimport { registerHandler } from '../store/database/asynchHandler';\nimport firebase from '../config/firebaseConfig';\nclass DatabaseTester extends React.Component {\n\n    // NOTE, BY KEEPING THE DATABASE PUBLIC YOU CAN\n    // DO THIS ANY TIME YOU LIKE WITHOUT HAVING\n    // TO LOG IN\n    handleClear = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('users').get().then(function(querySnapshot){\n            querySnapshot.forEach(function(doc) {\n                console.log(\"deleting \" + doc.id);\n                fireStore.collection('users').doc(doc.id).delete();\n            })\n        });\n    }\n\n    handleReset = () => {\n        // if (firebase.auth().currentUser!=undefined)\n        //     firebase.auth().currentUser.delete().then().catch((err)=>console.log(err));\n        //i added to clear first\n        const firestore = getFirestore();\n        wireframeJson.users.forEach(user=>{\n\n            firebase.auth().createUserWithEmailAndPassword(\n                user.email,\n                \"111111\"\n            )\n            .then(resp => {\n                console.log(\"Create user authentication: \"+user.email)\n                firestore.collection('users').doc(resp.user.uid).set(user);\n                console.log(\"Add data for user \"+resp.user.uid);\n            })\n            .catch((err) => {\n                console.log(err);\n                firestore.collection('users').doc(firebase.auth().currentUser.uid).set(user);\n                console.log(\"But still add data for the existing user. Need to manully set it as Administrator\")\n            });\n        });\n        \n        // wireframeJson.users.forEach(user => {\n        //     fireStore.collection('users').add(user).then(() => {\n        //             console.log(\"DATABASE RESET\");\n        //             // add a authentication account\n        //             firebase.auth().createUserWithEmailAndPassword(\n        //                 user.email,\n        //                 \"111111\"\n        //             )\n        //                 // const newUser={\n        //                 //     email: user.email,\n        //                 //     password: '111111',\n        //                 //     firstName: user.first_name,\n        //                 //     lastName: user.last_name,\n        //                 //     initials: user.initials,\n        //                 //   };\n        //                 // this.props.register(newUser, firebase);\n                    \n        //         }).catch((err) => {\n        //             console.log(err);\n        //         });\n        // });\n\n    }\n\n    render() {\n        //this.props.users.users[this.props.auth.currentUser.uid].whetherAdministrator==true\n        // if (this.props.auth.currentUser==undefined){\n        //     return (\n        //         <p>\n        //             Please log in to use the databaseTester\n        //         </p>\n        //    )\n        // }\n        // else return (\n            return (\n            <div>\n                <div>\n                    <button onClick={this.handleClear}>Clear Database</button>\n                    <button onClick={this.handleReset}>Reset Database</button>\n                </div>\n            </div>\n            )\n        // )\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        auth: state.firebase.auth,\n        users: state.firestore.data,\n        firebase: state.firebase\n    };\n}\nconst mapDispatchToProps = dispatch => ({\n    register: (newUser, firebase) => dispatch(registerHandler(newUser, firebase)),\n  });\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DatabaseTester);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nimport Navbar from './components/navbar/Navbar.js';\nimport RegisterScreen from './components/register_screen/RegisterScreen.js';\nimport LoginScreen from './components/login_screen/LoginScreen.js';\nimport HomeScreen from './components/home_screen/HomeScreen.js';\nimport WireframerScreen from './components/wireframer_screen/WireframerScreen.js';\n\nimport DatabaseTester from './test/DatabaseTester'\n\nclass App extends Component {\n  render() {\n    const { auth } = this.props;\n\n    // if auth is loaded then we render App.\n    // But if not then we doesn't render the one.\n    if (auth.isLoaded) {\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={HomeScreen} />\n              <Route exact path=\"/home\" component={HomeScreen} />\n              <Route path=\"/databaseTester\" component={DatabaseTester} />\n              <Route path=\"/register\" component={RegisterScreen} />\n              <Route path=\"/login\" component={LoginScreen} />\n              <Route exact path=\"/wireframer/:index\" component={WireframerScreen} />\n              {/* <Route path=\"/:any\" component={HomeScreen} /> */}\n              \n            </Switch>\n          </div>\n        </BrowserRouter>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(App);","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from '../config/firebaseConfig';\nimport rootReducer from './reducers/rootReducer';\nimport App from '../App';\n\nclass ReactReduxFirebaseApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // We enhance compose in order to use Redux DevTools extension\n        // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n        // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\n        const rrfConfig = {\n            useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n            userProfile: 'users',\n            attachAuthIsReady: true,\n        };\n\n        const store = createStore(rootReducer,\n            composeEnhancers(\n                applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n                reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n            )\n        );\n\n        const rrfProps = {\n            firebase,\n            config: rrfConfig,\n            dispatch: store.dispatch,\n            createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n        };\n\n        this.state = {\n            store: store,\n            rrfProps: rrfProps\n        }\n    }\n\n    render() {\n        return (\n            <Provider store={this.state.store}>\n                <ReactReduxFirebaseProvider {...this.state.rrfProps}>\n                    <App />\n                </ReactReduxFirebaseProvider>\n            </Provider>\n        )\n    }\n}\n\nexport default ReactReduxFirebaseApp","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/wireframers_layout.css'\nimport './css/wireframers_style.css'\nimport * as serviceWorker from './serviceWorker';\n\nimport ReactReduxFirebaseApp from './store/ReactReduxFirebaseApp'\n\nReactDOM.render(\n  <ReactReduxFirebaseApp />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}